
###########
#For Prusa Slicer
#START_PRINT_BLUER EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
#For Cura
#START_PRINT_BLUER BED_TEMP={material_bed_temperature_layer_0} EXTRUDER_TEMP={material_print_temperature_layer_0}

[respond]


[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(230)|float %}
    SAVE_GCODE_STATE NAME=start
    SET_LED LED=lamp RED=0.12 GREEN=0.12 BLUE=0.12
    G90 ; Use absolute coordinates
    M83 ; extruder relative mode
    M117 Warming up
    M118 Warming up
    M104 S{EXTRUDER_TEMP} ; set extruder temp
    M140 S{BED_TEMP} ; set bed temp
    M190 S{BED_TEMP}; wait for bed temp
    M109 S{EXTRUDER_TEMP} ; wait for extruder temp
    G28 ;Home
    G1 Z2 F240
    G1 X2 Y10 F3000
    BED_MESH_PROFILE LOAD=default     #BED_MESH_CALIBRATE  # ou     #BED_MESH_PROFILE LOAD=default
    M104 S{EXTRUDER_TEMP} ; set final nozzle temp
    M190 S{BED_TEMP} ; wait for bed temp to stabilize
    M109 S{EXTRUDER_TEMP} ; wait for nozzle temp to stabilize
    M117 Purgin
    M118 Purgin
    #from prusaslicer
    G1 Z0.28 F240
    G92 E0
    G1 Y140 E10 F1500 ; prime the nozzle
    G1 X2.3 F5000
    G92 E0
    G1 Y10 E10 F1200 ; prime the nozzle
    G92 E0
    M117 Printing
    M118 Printing
    RESTORE_GCODE_STATE NAME=start    

[gcode_macro END_PRINT]
gcode:
    M140 S0
    M104 S0
    M106 S0
    G91
    G1 X0 Y0 E-3 F300
    G1 Z20 F3000
    G90
    M84 

#{if max_layer_z < max_print_height}G1 Z{z_offset+min(max_layer_z+2, max_print_height)} F600 ; Move print head up{endif}
#G1 X5 Y{print_bed_max[1]*0.8} F{travel_speed*60} ; present print
#{if max_layer_z < max_print_height-10}G1 Z{z_offset+min(max_layer_z+70, max_print_height-10)} F600 ; Move print head further up{endif}
#{if max_layer_z < max_print_height*0.6}G1 Z{max_print_height*0.6} F600 ; Move print head further up{endif}
#M140 S0 ; turn off heatbed
#M104 S0 ; turn off temperature
#M107 ; turn off fan
#M84 X Y E ; disable motors



[gcode_macro PARK]
gcode:
    PAUSE

[gcode_macro PIDBED]
description: PID BED
gcode:
    {% set pidb = params.pidb|default(45.0)|float %} 
    M117 Pid-autotune BED temp:{pidb}
    PID_CALIBRATE HEATER=heater_bed TARGET={pidb}


[gcode_macro PIDEXTRUDER]
description: PID EXTRUDER
gcode:
    {% set pide = params.pide|default(190.0)|float %} 
    M117 Pid-autotune E0 extruder:{pide}
    PID_CALIBRATE HEATER=extruder TARGET={pide}


[gcode_macro M600]
description: Filament change macro
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    M118 Homing
    G28
  {% endif %}
  {% if printer.extruder.can_extrude == 0 %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z > (max_z - 20.0) %}
        {% set z_safe = max_z %}
    {% else %}
        {% set z_safe = (act_z + 20.0) %}
    {% endif %}
    G91
    G1 Z{z_safe}
    G90
    G1 X0 Y0 F2100
    M118 Acquiring temperature
    M109 S200
  {% endif %}  
  {% if printer.pause_resume.is_paused == 0 %}
    PAUSE
  {% endif %}
  M118 First UNLOAD, then LOAD new and RESUME when ready

[gcode_macro UNLOAD]
description: Unload filament helper
gcode: 
  {% if printer.pause_resume.is_paused == 1 %}
    {% if printer.extruder.can_extrude == 1 %}
      G91
      G1 E5 F300
      G1 E-50 F300
      G90
    {% else %}
      RESPOND TYPE=error MSG="Extrude below minimum temp"
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG="Printer must be paused"
  {% endif %}

[gcode_macro LOAD]
description: Load filament helper
gcode:
  {% if printer.pause_resume.is_paused == 1 %}
    {% if printer.extruder.can_extrude == 1 %}
      G91
      G1 E20 F300
      G90
    {% else %}
      RESPOND TYPE=error MSG="Extrude below minimum temp"
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG="Printer must be paused"
  {% endif %}

[gcode_macro LOW_TEMP_CHECK_T]
gcode: 
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
#            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T %}  # heat to T.
#            M118 No setpoint, heating to {T}.
            M109 S{T}
        {% endif %}
    {% endif %}

[gcode_macro M900]
description: Set pressure advance
gcode:
  SET_PRESSURE_ADVANCE ADVANCE={params.K|default(0)}


#################### for mpsm
#[gcode_macro PAUSE]
#rename_existing: BASE_PAUSE
## change this if you need more or less extrusion
#variable_extrude: 1.0
#gcode:
 #   ##### read E from pause macro #####
 #   {% set E = printer["gcode_macro PAUSE"].extrude|float %}
 #   ##### set park positon for x and y #####
 #   # default is your max posion from your printer.cfg
 #   {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
 #   {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
 #   ##### calculate save lift position #####
 #   {% set max_z = printer.toolhead.axis_maximum.z|float %}
 #   {% set act_z = printer.toolhead.position.z|float %}
 #   {% if act_z < (max_z - 2.0) %}
 #       {% set z_safe = 2.0 %}
 #   {% else %}
 #       {% set z_safe = max_z - act_z %}
 #   {% endif %}
 #   ##### end of definitions #####
 #   SAVE_GCODE_STATE NAME=PAUSE_state
 #   BASE_PAUSE
 #   G91
 #   G1 E-{E} F2100
 #   G1 Z{z_safe} F600
 #   G90
 #   G1 X{x_park} Y{y_park} F6000
 #   M117 Paused


#[gcode_macro RESUME]
#rename_existing: BASE_RESUME
#gcode:
#    ##### read E from pause macro #####
#    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#    ##### end of definitions #####
#    G91
#    G1 E{E} F2100
#    RESTORE_GCODE_STATE NAME=PAUSE_state
#    BASE_RESUME
#    M117 Printing

##############################


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(10) %}       #edit to your park position
    {% set y = params.Y|default(170) %}      #edit to your park position
    {% set z = params.Z|default(20)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate safe lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F300
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F4000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    G91
    G1 E{e} F300
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME  


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    M220 S100 ; Reset Speed factor override percentage to default (100%)
    M221 S100 ; Reset Extrude factor override percentage to default (100%)
    G91 ; Set coordinates to relative
    {% if printer.extruder.temperature >= 180 %}
        G1 F1000 E-1 ; Retract filament 3 mm to prevent oozing
    {% endif %}

    ;if all axis are homed, lift the hotend to leave room for hot filament to ooze and to keep it clear of the bed.
    {% if printer.toolhead.homed_axes == "xyz" %}
        {% set ENDY = printer.toolhead.axis_maximum.y|float - 10 %}
        G1 F600 Z10 ; Move Z Axis up 10 mm to allow filament ooze freely
        G90 ; Set coordinates to absolute
        G1 X0 Y{ENDY} F1000 ; Move Heat Bed to the front for easy print removal
        M84 ; Disable stepper motors
    {% endif %}
    M117 Ready
    ;set part fan speed to zero.
    M106 S0
    ;bed and hotend are left at the print temps in case I want to restart. 
    BASE_CANCEL_PRINT

#[gcode_macro CANCEL_PRINT]
#rename_existing: BASE_CANCEL_PRINT
#gcode:
#    {% set ENDY = printer.toolhead.axis_maximum.y|float - 10 %}
#    G91       
#    G1    E-1 F300
#    G1 Z1 E-1 F4000
#    G90
#    G1 X0 Y{ENDY}
#    M84
#    M106 S0
#    TURN_OFF_HEATERS
#    CLEAR_PAUSE
#    SDCARD_RESET_FILE
#    BASE_CANCEL_PRINT

[gcode_macro Bed_Mesh]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28                                                                     # home if not homed
    {% endif %}
    SAVE_GCODE_STATE NAME=G29_STATE
    {% if T|int > 30 %}
        M140 S{T}                                                               # set bed temperature
        M190 S{T}                                                               # wait for bed temperature
    {% endif %}
    BED_MESH_CALIBRATE
    G0 X10 Y10 F6000


#[gcode_macro PROBE_CALIBRATE]
#rename_existing: BASE_PROBE_CALIBRATE
#gcode:
#    {% if printer.toolhead.homed_axes != "xyz" %}
#        G28                                                                     # home if not homed
#    {% endif %}
#    BASE_PROBE_CALIBRATE

[gcode_macro PRIME_LINE]
#PrusaSliser: PRIME_LINE F={first_layer_speed}
#Cura: PRIME_LINE F={speed_print_layer_0}
gcode:
    {% set feedrate = params.F|default(20)|float * 60 %}
    {% set length = params.L|default(120)|float %}
    {% if 'Y' in params %}
        {% set length_max = ( printer.toolhead.axis_maximum.y|float - 10.0 ) %}
    {% else %}
        {% set length_max = ( printer.toolhead.axis_maximum.x|float - 10.0 ) %}
    {% endif %}
    {% if length > length_max %}
        {% set length = length_max %}
    {% endif %}
    {% set width = printer.configfile.settings.extruder.nozzle_diameter|float %}
    {% set height = ( (width / 0.04)|int - (width / 0.04 / 4)|int )|float * 0.04 %}
    {% set extrude = 1.5 * length * width * height / 2.4 %}
    SAVE_GCODE_STATE NAME=PRIME_LINE_STATE
    SET_IDLE_TIMEOUT TIMEOUT=7200
    {% if 'Y' in params %}
        {% set x_start = 5.0 %}
        {% set y_start = (printer.toolhead.axis_maximum.y|float - length) / 2 %}
        G0 X{x_start} Y{y_start} Z{height} F5000                                # move to start position
        G91                                                                     # relative positioning
        G1 Y{length} E{extrude} F{feedrate}                                     # draw the 1st line
        G1 X{width} F5000                                                       # move to the next line
        G1 Y-{length} E{extrude} F{feedrate}                                    # draw the 2nd line
    {% else %}
        {% set x_start = (printer.toolhead.axis_maximum.x|float - length) / 2 %}
        {% set y_start = 5.0 %}
        G0 X{x_start} Y{y_start} Z{height} F5000                                # move to start position
        G91                                                                     # relative positioning
        G1 X{length} E{extrude} F{feedrate}                                     # draw the 1st line
        G1 Y{width} F5000                                                       # move to the next line
        G1 X-{length} E{extrude} F{feedrate}                                    # draw the 2nd line
    {% endif %}
    RESTORE_GCODE_STATE NAME=PRIME_LINE_STATE

[gcode_macro _FILAMENT_BALL]
description: Helper: Round the filament tip
gcode:
  ##### set default parameter value #####
  {% set wait = params.WAIT|default(0) %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=STATE_FILAMENT_BALL
  # Ball up the filament tip
  G92 E0       ; zero the extruder
  M82          ; absolute extrusion
  G1 E2 F3600
  G1 E0 F3600
  G1 E4 F3600
  G1 E0 F3600
  G1 E8 F3600
  G1 E0 F3600
  M83          ; relative extrusion
  G1 E-25 F3600
  G4 P{wait|int * 1000}
  RESTORE_GCODE_STATE NAME=STATE_FILAMENT_BALL


[gcode_macro MANUAL_MESH_START]
GCODE:
     G28
     BED_MESH_CALIBRATE METHOD=MANUAL
     TESTZ Z=-5
	
[gcode_macro DECREASE_Z_POS]
GCODE:
     TESTZ Z=-0.025
	
[gcode_macro INCREASE_Z_POS]
GCODE:
     TESTZ Z=0.025
	
[gcode_macro NEXT_PROBE_POS]
GCODE:
     ACCEPT
     TESTZ Z=-5

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}


[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0


[gcode_macro PA_CALIBRATE]
gcode:
    ######################################################################################
    ####                             DEFINE USER PARAMETERS                            ###
    ######################################################################################
    ###############################[ set printer parameters ]#############################
    {% set nozzle_diameter = printer.configfile.config.extruder.nozzle_diameter | float %}
    {% set bed_size_x           = 180                                           | float %}
    {% set bed_size_y           = 180                                           | float %}
    {% set retract              = 0.8                                           | float %}
    {% set retract_speed        = 30 * 60                                       | float %}
    ######################[ set parameters for extrusion calculation ]####################
    {% set filament_diameter    = params.FD           | default(1.75)           | float %}
    {% set layer_height         = params.LH           | default(0.3)            | float %}
    {% set nozzle_line_ratio    = params.EW           | default(1.2)            | float %}
    {% set extrusion_multiplier = params.EM           | default(1.0)            | float %}
    ################################[ set temperatures ]##################################
    {% set bed_temp             = params.TBED         | default(60)                     %}
    {% set extruder_temp        = params.TEX          | default(230)                     %}
    ###############################[ set test parameters ]################################
    {% set slow_speed           = params.SLOW_SPEED   | default(25)             | float %}
    {% set slow_length          = params.SLOW_LENGTH  | default(20)             | float %}
    {% set fast_speed           = params.FAST_SPEED   | default(80)             | float %}
    {% set fast_length          = params.FAST_LENGTH  | default(40)             | float %}
    {% set travel_speed         = params.TRAVEL_SPEED | default(180)            | float %}
    {% set pa_start             = params.PA_START     | default(0.0)            | float %}
    {% set pa_end               = params.PA_END       | default(0.1)           | float %}
    {% set pa_step              = params.PA_STEP      | default(0.01)           | float %}
    {% set line_spacing         = params.SPACING      | default(5)              | float %}
    ######################################################################################
    ####                           !!! DO NOT EDIT BELOW !!!                           ###
    ######################################################################################
    {% set spacing = line_spacing                                                       %}
    {% set fd      = filament_diameter                                                  %}
    {% set nd      = nozzle_diameter                                                    %}
    {% set ew      = nozzle_diameter * nozzle_line_ratio                                %}
    {% set em      = extrusion_multiplier                                               %}
    {% set lh      = layer_height                                                       %}
    {% set pa      = pa_start                                                           %}
    ##################################[ calculations ]####################################
    {% set slow_speed           = slow_speed * 60                               | float %}
    {% set fast_speed           = fast_speed * 60                               | float %}
    {% set travel_speed         = travel_speed * 60                             | float %}
    {% set lines    = (((pa_end - pa_start) / pa_step) + 1) | round(0, 'ceil')  | int   %}
    {% set p_width  = ((2 * slow_length + fast_length))                                 %}
    {% set p_height = (lines * (spacing + (nd * ew)))                                   %}
    {% set p_width_total  = p_width + 20                                                %}
    {% set p_height_total = p_height + 40                                               %}
    {% set start_x_pos    = (bed_size_x - p_width) / 2                                  %}
    {% set end_x_pos      = (bed_size_x + p_width) / 2                                  %}
    {% set start_y_pos    = (bed_size_y - p_height) / 2                                 %}
    {% set end_y_pos      = (bed_size_y + p_height) / 2                                 %}
    {% set x_pos          = start_x_pos                                                 %}
    {% set y_pos          = start_y_pos                                                 %}
    ########################[ check if test patter fits on bed ]##########################
    {% if p_height_total > bed_size_y or p_width_total > bed_size_x %}
      {% set exceeds_bed_area = true  %}
    {% else %}
      {% set exceeds_bed_area = false %}
    {% endif %}
    ######################################################################################
    ### Using Slic3r flow math to calculate extrusion amounts:                         ###
    ######################################################################################
    ### V_in  = (pi * fd ** 2) / 4 * E                                                 ###
    ### V_out = A * L * em                                                             ###
    ### V_in  = V_out                                                                  ###
    ### A     = (ew - lh) * lh + pi * (lh / 2) ** 2                                    ###
    ### E     = ((A * L * 4) / (pi * fd ** 2)) * em                                    ###
    ######################################################################################
    {% set pi      = 3.141592654                                     | float            %}
    {% set A       = (ew - lh) * lh + pi * (lh / 2) ** 2             | float            %}
    {% set E_prime = (((A * p_height * 4) / (pi * fd ** 2)) * 1.6)   | round(6, 'ceil') %}
    {% set E_slow  = (((A * slow_length * 4) / (pi * fd ** 2)) * em) | round(6, 'ceil') %}
    {% set E_fast  = (((A * fast_length * 4) / (pi * fd ** 2)) * em) | round(6, 'ceil') %}
    {% set E_mark  = (((A * 20 * 4) / (pi * fd ** 2)) * em)          | round(6, 'ceil') %}
    ######################################################################################
    ### START CALIBRATION ###
    M190 S{ bed_temp }
    M109 S{ extruder_temp }
    G28
    ### PRIME NOZZLE ###
    M83 ; set relative extrusion mode
    G1 X{ x_pos - 10 } Y{ y_pos } F{ travel_speed } ; move to prime line start
    G1 Z{ layer_height } ; move Z down
    G1 Y{ y_pos + p_height } E{ E_prime } F { slow_speed } ; print first prime line
    G1 X{ x_pos - 5 } F{ travel_speed } ; move to second prime line start
    G1 Y{ y_pos } E{ E_prime } F { slow_speed } ; print second prime line
    G92 E0
    ### START TEST PATTERN ###
    SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={ pa }
    {% for i in range(lines) %}
        {% if not loop.first %}
            {% set y_pos = y_pos + (i * (spacing + ew)) %}
            {% set pa = pa + (i * pa_step) %}
            SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={ pa }
        {% endif %}
        M117 PA={ pa }
        ### move to line starting postion
        G1 X{ x_pos } Y{ y_pos } F{ travel_speed }
        G1 E{ retract } F{ retract_speed } ; un-retract
        ### print first slow part
        {% set x_pos = x_pos + slow_length %}
        G1 X{ x_pos } Y{ y_pos } E{ E_slow } F{ slow_speed }
        ### print fast part
        {% set x_pos = x_pos + fast_length %}
        G1 X{ x_pos } Y{ y_pos } E{ E_fast } F{ fast_speed }
        ### print second slow part
        {% set x_pos = x_pos + slow_length %}
        G1 X{ x_pos } Y{ y_pos } E{ E_slow } F{ slow_speed }
        G1 E-{ retract } F{ retract_speed } ; retract
        ### reset x position
        {% set x_pos = start_x_pos %}
    {% endfor %}
    ### PRINT MARKER ###
    G1 E-{ retract } F{ retract_speed } ; retract
    G1 X{ x_pos + slow_length } Y{ end_y_pos + 5 } F{ travel_speed } ; move to position marker 1
    G1 E{ retract } F{ retract_speed } ; un-retract
    G1 Y{ end_y_pos + 5 + 20 } E{ E_mark } F{ slow_speed } ; print marker 1
    G1 E-{ retract } F{ retract_speed } ; retract
    G1 X{ x_pos + slow_length + fast_length } Y{ end_y_pos + 5 } F{ travel_speed } ; move to position marker 2
    G1 E{ retract } F{ retract_speed } ; un-retract
    G1 Y{ end_y_pos + 5 + 20 } E{ E_mark } F{ slow_speed } ; print marker 2
    G1 E-{ retract } F{ retract_speed } ; retract
    ### END CALIBRATION ###
    TURN_OFF_HEATERS
    G1 Z5
    G1 X10 Y{ bed_size_y - 5 } F{ travel_speed } ;//TODO: maybe move to "max toolhead position - 5"
    M84    


################

[gcode_macro TEST_SPEED]
#
# TEST_SPEED
# 
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10
description: Perform a speed test SPEED=120 ACCEL=2000 ITERATIONS=5
gcode:
 # Speed
 {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
 # Iterations
 {% set iterations = params.ITERATIONS|default(5)|int %}
 # Acceleration
 {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
 # Bounding box (in case the machine min/maxes are not perfect)
 {% set bound = params.BOUND|default(20)|int %}
 
 # Set speed test bounds (machine minimum/maximum positions, inset by the bounding box)
 {% set x_min = printer.toolhead.axis_minimum.x + bound %}
 {% set x_max = printer.toolhead.axis_maximum.x - bound %}
 {% set y_min = printer.toolhead.axis_minimum.y + bound %}
 {% set y_max = printer.toolhead.axis_maximum.y - bound %}

 # Save current gcode state (absolute/relative, etc)
 SAVE_GCODE_STATE NAME=TEST_SPEED
 
 # Absolute positioning
 G90
 
 # Set new limits
 SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

 # Home and get position for comparison later:
  G28
        G0 Z30
  # QGL if not already QGLd (only if QGL section exists in config)
  {% if printer.configfile.settings.quad_gantry_level %}
   {% if printer.quad_gantry_level.applied == False %}
    QUAD_GANTRY_LEVEL
    G28 Z
   {% endif %}
  {% endif %} 
  G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
  G4 P1000 
  GET_POSITION

 # Go to starting position
 G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}

 {% for i in range(iterations) %}
  # Diagonals
  G0 X{x_min} Y{y_min} F{speed * 60}
  G0 X{x_max} Y{y_max} F{speed * 60}
  G0 X{x_min} Y{y_min} F{speed * 60}
  G0 X{x_max} Y{y_min} F{speed * 60}
  G0 X{x_min} Y{y_max} F{speed * 60}
  G0 X{x_max} Y{y_min} F{speed * 60}
  
  # Box
  G0 X{x_min} Y{y_min} F{speed * 60}
  G0 X{x_min} Y{y_max} F{speed * 60}
  G0 X{x_max} Y{y_max} F{speed * 60}
  G0 X{x_max} Y{y_min} F{speed * 60}
 {% endfor %}

 # Restore max speed/accel/accel_to_decel to their configured values
 SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

 # Re-home XY and get position again for comparison:
  G28 X Y
  # Go to XY home positions (in case your homing override leaves it elsewhere)
  G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
  G4 P1000 
  GET_POSITION

 # Restore previous gcode state (absolute/relative, etc)
 RESTORE_GCODE_STATE NAME=TEST_SPEED

################

[gcode_macro PA_CAL]
# Klipper pressure advance line calibration macro.
# Usage: PA_CAL BED=100 NOZZLE=240 PA_START=0.0 PA_STOP=0.1 NZL=0.4
# Or you can execute with no parameters, which will use values from printer.cfg and saved_variables.cfg.
# First prints a line with current set PA, then prints 21 additional line segments starting with PA_START, and increasing to PA_STOP.
# Based on http://realdeuce.github.io/Voron/PA/pressure_advance.html
# Cleaned up and moved to using saved_variables.cfg by u/jibbsisme
# Sourced from u/Deepsiks, assisted by u/imoftendisgruntled, u/scul86, and thanks to u/beansisfat, u/stray_r
##START_PRINT EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]

description: Tune Pressure Advance
gcode:
  # saved_variables.cfg
  {% set speed = printer.save_variables.variables.speed %}
  {% set nozzle_temp = printer.save_variables.variables.nozzle_temp %}
  {% set bed_temp = printer.save_variables.variables.bed_temp %}

  # macro parameters
  {% set BED = params.BED|default(bed_temp)|float %}
  {% set NOZZLE = params.NOZZLE|default(nozzle_temp)|float %}
  {% set PA_START = params.PA_START|default(0.0)|float %}
  {% set PA_STOP = params.PA_STOP|default(0.1)|float %}
  {% set NZL = params.NZL|default(printer.configfile.config["extruder"]["nozzle_diameter"])|float %}

  # calculated variables
  {% set PA_STEP = (PA_STOP - PA_START) / 20 |float %}
  {% set E20 = (0.1147475 * NZL) * 20|float %}
  {% set E40 = (0.1147475 * NZL) * 40|float %}
  {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
  {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}

  START_PRINT BED_TEMP={BED} EXTRUDER_TEMP={NOZZLE}

  G21 ; millimeter units
  G90 ; absolute XYZ
  M83 ; relative E
  SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=1500
  G92 E0
  M106 S0

  G1 X{(X_MID-40)} Y{(Y_MID-65)} F{speed}        ; move to start position
  G1 Z0.25 F300                                  ; move to layer height
  G1 E0.75 F1800                                 ; un-retract
  G1 X{(X_MID-20)} Y{(Y_MID-65)} E{E20} F300     ; print line part one
  G1 X{(X_MID+20)} Y{(Y_MID-65)} E{E40} F3000    ; print line part two
  G1 X{(X_MID+40)} Y{(Y_MID-65)} E{E20} F300     ; print line part three
  G1 E-0.75 F1800                                ; retract
  G1 Z1 F300                                     ; move above layer height

  {% for i in range(0, 21) %}
      SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)} ; set Pressure Advance
      M117 PA={PA_START + (i * PA_STEP)}, STEP={PA_STEP}.
      G1 X{(X_MID-40)} Y{(Y_MID-35)+(5*i)} F30000           ; move to start position
      G1 Z0.25 F300                                         ; move to layer height
      G1 E0.75 F1800                                        ; un-retract
      G1 X{(X_MID-20)} Y{(Y_MID-35)+(5*i)} E{E20} F300      ; print line part one
      G1 X{(X_MID+20)} Y{(Y_MID-35)+(5*i)} E{E40} F3000     ; print line part two
      G1 X{(X_MID+40)} Y{(Y_MID-35)+(5*i)} E{E20} F300      ; print line part three
      G1 E-0.75 F1800                                       ; retract
      G1 Z1 F300                                            ; move above layer height
  {% endfor %}

  END_PRINT

  # these may not work, in which case you will need to count and do the math yourself!
  M117 New PA = ({PA_START} + (bestLine * {PA_STEP}) )
  {action_respond_info ("Find best line and multiply it by (" + PA_START|string + " + (bestLine * " + PA_STEP|string + ") ) to find your PA setting.")}


[gcode_macro mario]
gcode:
    ;MarioBro
    M300 S1567 P187
    M300 S1046 P93
    M300 S1567 P281
    M300 S880 P187
    M300 S1046 P93
    M300 S880 P281
    M300 S987 P187
    M300 S1046 P93
    M300 S987 P187
    M300 S880 P281
    M300 S1661 P93
    M300 S880 P281
    M300 S1567 P187
    M300 S1046 P93
    M300 S1567 P281
    M300 S880 P187
    M300 S1046 P93
    M300 S880 P187
    M300 S987 P1125

[gcode_macro BBShark]
gcode:
    M117 Baby Shark
    M300 P495 S587
    M300 P27 S0
    M300 P495 S659
    M300 P27 S0
    M300 P261 S784
    M300 P261 S784
    M300 P261 S784
    M300 P130 S784
    M300 P261 S784
    M300 P130 S784
    M300 P261 S784
    M300 P261 S587
    M300 P261 S659
    M300 P261 S784
    M300 P261 S784
    M300 P261 S784
    M300 P130 S784
    M300 P261 S784
    M300 P130 S784
    M300 P261 S784
    M300 P261 S587
    M300 P261 S659
    M300 P261 S784
    M300 P261 S784
    M300 P261 S784
    M300 P130 S784
    M300 P261 S784
    M300 P130 S784
    M300 P261 S784
    M300 P261 S784
    M300 P261 S784
    M300 P990 S740
    M117 Ready

[gcode_macro Curintia]
gcode:
    M300 P391 S330
    M300 P457 S262
    M300 P65 S0
    M300 P522 S247
    M300 P1017 S220
    M300 P26 S0
    M300 P1091 S220
    M300 P213 S0
    M300 P133 S220
    M300 P128 S0
    M300 P261 S220
    M300 P196 S247
    M300 P65 S0
    M300 P261 S262
    M300 P261 S330
    M300 P261 S294
    M300 P261 S262
    M300 P2587 S247
    M300 P22 S0
    M300 P522 S294
    M300 P522 S247
    M300 P472 S220
    M300 P50 S0
    M300 P1043 S208
    M300 P978 S208
    M300 P326 S0
    M300 P141 S208
    M300 P120 S0
    M300 P233 S208
    M300 P28 S0
    M300 P261 S220
    M300 P261 S247
    M300 P261 S294
    M300 P261 S262
    M300 P261 S247
    M300 P2174 S330
    M300 P435 S0
    M300 P522 S330
    M300 P522 S294
    M300 P522 S277
    M300 P998 S294
    M300 P46 S0
    M300 P1091 S294
    M300 P213 S0
    M300 P98 S294
    M300 P163 S0
    M300 P261 S294
    M300 P224 S330
    M300 P37 S0
    M300 P261 S349
    M300 P261 S440
    M300 P261 S349
    M300 P261 S294
    M300 P2567 S262
    M300 P41 S0
    M300 P522 S440
    M300 P500 S330
    M300 P22 S0
    M300 P522 S262
    M300 P976 S247
    M300 P67 S0
    M300 P1304 S247
    M300 P261 S294
    M300 P261 S330
    M300 P261 S349
    M300 P261 S330
    M300 P261 S294
    M300 P261 S262
    M300 P261 S247
    M300 P2193 S220


[gcode_macro FINISH]
gcode:
    M300 S6644 P150
    M300 S5919 P150
    M300 S1864 P300
    M300 S1864 P300
    M300 S3520 P150
    M300 S4978 P150
    M300 S2959 P300
    M300 S3322 P300
    M300 S4978 P150
    M300 S4434 P150
    M300 S1760 P300
    M300 S3322 P300
    M300 S4434 P300